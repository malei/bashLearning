001) 递归脚本 {
	0001. { 
		#!/bin/bash
		list_dir() {
			for file in $1/*
			do
				if [ -d $file ]; then 
					#echo $file;
					list_dir $file;
				elif [ -f $file ]; then
					echo $file;
				fi
			done
		}
		list_dir $1
	}
}
002) 字符串切割 {
	http://blog.csdn.net/finewings/article/details/5718133;
	export TEST=123abc456abc789;
	echo ${TEST#*abc}          ===>删掉123abc剩下456abc789;
	echo ${TEST##*abc}       ===>删掉123abc456abc剩下"789;
	echo ${TEST%abc*}        ===>删掉abc789剩下123abc456;
	echo ${TEST%%abc*}    ===>删掉abc456abc789剩下123;
}
003) source 过程 {
	#!/bin/bash
	add() {
		a=$1;
		b=$2;
		c=$a+$b;
		echo $c;
	}

	#!/bin/bash
	source src.sh
	add 100 200
}
003) 判断文件 {
	#shell判断文件夹是否存在
	
	#如果文件夹不存在，创建文件夹
	if [ ! -d "/myfolder" ]; then
	mkdir /myfolder
	fi
	
	#shell判断文件,目录是否存在或者具有权限
	folder="/var/www/"
	file="/var/www/log"
	
	# -x 参数判断 $folder 是否存在并且是否具有可执行权限
	if [ ! -x "$folder"]; then
	mkdir "$folder"
	fi
	
	# -d 参数判断 $folder 是否存在
	if [ ! -d "$folder"]; then
	mkdir "$folder"
	fi
	
	# -f 参数判断 $file 是否存在
	if [ ! -f "$file" ]; then
	touch "$file"
	fi
	
	# -n 判断一个变量是否有值
	if [ ! -n "$var" ]; then
	echo "$var is empty"
	exit 0
	fi
	
	# 判断两个变量是否相等
	if [ "$var1" = "$var2" ]; then
						echo '$var1 eq $var2'
	else
			echo '$var1 not eq $var2'
	fi
}

004) 函数调用参数自动后移
005) source 的变量的自动改变
006) args :echo ${@:1:($#-1)}
007) /bin/bash run.sh 新启动一个进程
